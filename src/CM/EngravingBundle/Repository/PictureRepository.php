<?php

namespace CM\EngravingBundle\Repository;


use Doctrine\ORM\EntityManager;
use CM\EngravingBundle\Entity\Picture;

/**
 * PictureRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PictureRepository extends \Doctrine\ORM\EntityRepository
{
    private $entityManager;

    public function __construct(EntityManager $entityManager){
        $this->entityManager = $entityManager;
    }

    /**
     * @return array|Picture[]
     */
    public function findAll(){
        return $this->entityManager->getRepository('EngravingBundle:Picture')->findAll();
    }

    public function findOneByIdOrder($id){
        return $this->entityManager->getRepository('EngravingBundle:Picture')->findOneBy(['name' => $id]);
    }
               
    public function findOneById($id){
        return $this->entityManager->getRepository('EngravingBundle:Picture')->findOneBy(['id' => $id]);
    }

    public function FindAllByName($idOrder){
        $q = $this->entityManager->createQueryBuilder();
        $q->select('p')
            ->from('EngravingBundle:Picture', 'p')
            ->where('p.name = :id')
            ->setParameter('id', $idOrder)
        ;

        $images = $q->getQuery()->getResult();

        return $images;
    }

    /**
     * @return array|Picture[]
     * Cherche les images ayant comme champ id_session cet id
     */
    public function findByIdSession($id){
        $q = $this->entityManager->createQueryBuilder();
        $q->select('p')
            ->from('EngravingBundle:Picture', 'p')
            ->where('p.session = :id')
            ->setParameter('id', $id)
        ;

        $images = $q->getQuery()->getResult();

        return $images;
    }

    public function FindLast()
    {
        $qb = $this->entityManager->createQueryBuilder('p');
        $qb->select('p')
            ->from('EngravingBundle:Picture', 'p')
            ->orderBy('p.id', 'DESC')
            ->setMaxResults(1);
        ;

        $picture = $qb->getQuery()->getResult();

        return $picture;
    }

    /**
     * @return array|Picture[]
     * Cherche les images sans session
     */
    public function findAllNewPicture(){
        $q = $this->entityManager->createQueryBuilder();
        $q->select('p')
            ->from('EngravingBundle:Picture', 'p')
            ->where($q->expr()->isNull('p.session'))
            ->orderBy('p.category', 'DESC')
        ;

        $images = $q->getQuery()->getResult();

        return $images;
    }

    public function save(Picture $picture){
        $this->entityManager->persist($picture);
        $this->entityManager->flush();
    }

    public function delete(Picture $picture){
        $this->entityManager->remove($picture);
        $this->entityManager->flush();
    }
}
